{
  "chaoslib-version": "1.19.0",
  "platform": "Linux-5.8.0-50-generic-x86_64-with-glibc2.29",
  "node": "luisreciomelero-HP-Pavilion-Laptop-15-ck0xx",
  "experiment": {
    "version": "1.0.0",
    "title": "¿Qué ocurre cuando eliminamos el pod en el que se ejecuta el contenedor de Kafka?",
    "description": "Al estar manejado por un deployment debería levantarse otro de forma inmediata.",
    "tags": [
      "k8s",
      "pod"
    ],
    "steady-state-hypothesis": {
      "title": "Pod exists",
      "probes": [
        {
          "name": "pod-exists",
          "type": "probe",
          "tolerance": 2,
          "provider": {
            "type": "python",
            "func": "count_pods",
            "module": "chaosk8s.pod.probes",
            "arguments": {
              "label_selector": "app=kafka, component=kafka-broker",
              "ns": "default"
            }
          }
        },
        {
          "name": "pod-in-phase",
          "type": "probe",
          "tolerance": true,
          "provider": {
            "type": "python",
            "func": "pods_in_phase",
            "module": "chaosk8s.pod.probes",
            "arguments": {
              "label_selector": "app=kafka, component=kafka-broker",
              "ns": "default",
              "phase": "Running"
            }
          }
        },
        {
          "name": "pod-in-conditions",
          "type": "probe",
          "tolerance": true,
          "provider": {
            "type": "python",
            "func": "pods_in_conditions",
            "module": "chaosk8s.pod.probes",
            "arguments": {
              "label_selector": "app=kafka, component=kafka-broker",
              "ns": "default",
              "conditions": [
                {
                  "type": "Ready",
                  "status": "True"
                }
              ]
            }
          }
        }
      ]
    },
    "method": [
      {
        "type": "action",
        "name": "terminate-pod",
        "provider": {
          "type": "python",
          "module": "chaosk8s.pod.actions",
          "func": "terminate_pods",
          "arguments": {
            "label_selector": "app=kafka, component=kafka-broker",
            "ns": "default"
          }
        },
        "pauses": {
          "after": 300
        }
      }
    ],
    "extensions": [
      {
        "name": "chaosiq",
        "experiment_id": "ac909764-e844-468e-b429-c6dd688194d3",
        "experiment_path": "terminate-kafka-pod-ssh-running-and-ready.yaml"
      }
    ],
    "dry": false
  },
  "start": "2021-04-25T18:40:42.740699",
  "status": "completed",
  "deviated": false,
  "steady_states": {
    "before": {
      "steady_state_met": true,
      "probes": [
        {
          "activity": {
            "name": "pod-exists",
            "type": "probe",
            "tolerance": 2,
            "provider": {
              "type": "python",
              "func": "count_pods",
              "module": "chaosk8s.pod.probes",
              "arguments": {
                "label_selector": "app=kafka, component=kafka-broker",
                "ns": "default"
              }
            }
          },
          "output": 2,
          "status": "succeeded",
          "start": "2021-04-25T18:40:45.384569",
          "end": "2021-04-25T18:40:46.138743",
          "duration": 0.754174,
          "tolerance_met": true
        },
        {
          "activity": {
            "name": "pod-in-phase",
            "type": "probe",
            "tolerance": true,
            "provider": {
              "type": "python",
              "func": "pods_in_phase",
              "module": "chaosk8s.pod.probes",
              "arguments": {
                "label_selector": "app=kafka, component=kafka-broker",
                "ns": "default",
                "phase": "Running"
              }
            }
          },
          "output": true,
          "status": "succeeded",
          "start": "2021-04-25T18:40:46.139774",
          "end": "2021-04-25T18:40:46.178330",
          "duration": 0.038556,
          "tolerance_met": true
        },
        {
          "activity": {
            "name": "pod-in-conditions",
            "type": "probe",
            "tolerance": true,
            "provider": {
              "type": "python",
              "func": "pods_in_conditions",
              "module": "chaosk8s.pod.probes",
              "arguments": {
                "label_selector": "app=kafka, component=kafka-broker",
                "ns": "default",
                "conditions": [
                  {
                    "type": "Ready",
                    "status": "True"
                  }
                ]
              }
            }
          },
          "output": true,
          "status": "succeeded",
          "start": "2021-04-25T18:40:46.179438",
          "end": "2021-04-25T18:40:46.204965",
          "duration": 0.025527,
          "tolerance_met": true
        }
      ]
    },
    "after": {
      "steady_state_met": true,
      "probes": [
        {
          "activity": {
            "name": "pod-exists",
            "type": "probe",
            "tolerance": 2,
            "provider": {
              "type": "python",
              "func": "count_pods",
              "module": "chaosk8s.pod.probes",
              "arguments": {
                "label_selector": "app=kafka, component=kafka-broker",
                "ns": "default"
              }
            }
          },
          "output": 2,
          "status": "succeeded",
          "start": "2021-04-25T18:45:46.760369",
          "end": "2021-04-25T18:45:46.785915",
          "duration": 0.025546,
          "tolerance_met": true
        },
        {
          "activity": {
            "name": "pod-in-phase",
            "type": "probe",
            "tolerance": true,
            "provider": {
              "type": "python",
              "func": "pods_in_phase",
              "module": "chaosk8s.pod.probes",
              "arguments": {
                "label_selector": "app=kafka, component=kafka-broker",
                "ns": "default",
                "phase": "Running"
              }
            }
          },
          "output": true,
          "status": "succeeded",
          "start": "2021-04-25T18:45:46.787002",
          "end": "2021-04-25T18:45:46.814459",
          "duration": 0.027457,
          "tolerance_met": true
        },
        {
          "activity": {
            "name": "pod-in-conditions",
            "type": "probe",
            "tolerance": true,
            "provider": {
              "type": "python",
              "func": "pods_in_conditions",
              "module": "chaosk8s.pod.probes",
              "arguments": {
                "label_selector": "app=kafka, component=kafka-broker",
                "ns": "default",
                "conditions": [
                  {
                    "type": "Ready",
                    "status": "True"
                  }
                ]
              }
            }
          },
          "output": true,
          "status": "succeeded",
          "start": "2021-04-25T18:45:46.815379",
          "end": "2021-04-25T18:45:46.842745",
          "duration": 0.027366,
          "tolerance_met": true
        }
      ]
    },
    "during": []
  },
  "run": [
    {
      "activity": {
        "type": "action",
        "name": "terminate-pod",
        "provider": {
          "type": "python",
          "module": "chaosk8s.pod.actions",
          "func": "terminate_pods",
          "arguments": {
            "label_selector": "app=kafka, component=kafka-broker",
            "ns": "default"
          }
        },
        "pauses": {
          "after": 300
        }
      },
      "output": null,
      "status": "succeeded",
      "start": "2021-04-25T18:40:46.206670",
      "end": "2021-04-25T18:40:46.660300",
      "duration": 0.45363
    }
  ],
  "rollbacks": [],
  "end": "2021-04-25T18:45:46.844852",
  "duration": 304.23646092414856,
  "extensions": [
    {
      "name": "chaosiq",
      "execution_id": null,
      "experiment_id": "ac909764-e844-468e-b429-c6dd688194d3",
      "safeguards": null
    }
  ]
}