version: '3.5'

services:
  zookeeper:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - kafkastreams-network
  kafka:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override num.partitions=$${KAFKA_NUM_PARTITIONS}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - kafkastreams-network

  mg:
    image: luisreciomelero/mg-quarkus-producer:v1.0.8
    command: sh -c "sleep 60"
    depends_on: 
      - zookeeper
      - kafka
    networks:
      - kafkastreams-network
    environment:
      KAFKA_HOST: kafka:9092
    ports:
      - "8084:8084"
      
  ms:
    image: luisreciomelero/mg-quarkus-producer:v1.0.2
    command: sh -c "sleep 60"
    depends_on: 
      - zookeeper
      - kafka
      - postgres
    networks:
      - kafkastreams-network
    environment:
      KAFKA_HOST: kafka:9092
      POSTGRES_URL: postgres:5432
    ports:
      - "8086:8086"
      
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    networks:
      - kafkastreams-network  
networks:
  kafkastreams-network:
    name: ks